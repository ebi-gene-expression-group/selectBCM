% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Batch_correction_methods.R
\name{batch_correction}
\alias{batch_correction}
\title{Correction of batch effect in merged dataset}
\arguments{
\item{experiment}{It is the merged dataset obtained at the previous step (`merge_experiments`).}

\item{model}{A R formula mentioning the biological factor to take into account during the correction.}

\item{k}{No. of confounders for RUV methods and denotes the "number of factors of unwanted variation to remove".
If k is not provided it will then estimated from input data.}

\item{batch}{meta-data column which has information about batch-label}

\item{filter}{A string. Should be one of following string- 'symbol', 'ensembl_gene_id', or 'entrezgene_id'
depending on gene label for the given dataset.}
}
\value{
A list of the batch-corrected experiment.
}
\description{
This function performs various type of batch-correction on given merged
dataset and output batch-corrected data as a list.
}
\details{
This function contains a cocktail of various batch-correction methods.

For Microarray, `batch_correction` function has following methods-

a) limma- Default limma setting,
b) GFS - Gene Fuzzy Score method.
c) Robust Quantile Normalization- quantile normalization method from PreprocessCore package,
d) ComBat- Implemented from SVA package,
e) Q_ComBat - It is Quantile+ parametric adjustment of ComBat,
f) MNN - is default mnnCorrect function from batchelor package.
g) naiveRandRUV_HK - default naiveRandRUV using Human HK genes from RUVnormalize package,
h) Q_naiveRandRUV_HK - is Qunatile+ naiveRandRUV_HK,
i) naiveRandRUV_empi.controls- default naiveRandRUV using empirically derived HK genes from RUVnormalize package,
j) Q_naiveRandRUV_empi.controls - is Qunatile+ naiveRandRUV_empi.controls.

For bulk-RNAseq, `batch_correction` function has following methods-

a) limma- default limma setting,
b) ComBat- implemented from SVA package,
c) ComBat_seq - implemented from ComBat-Seq package,
d) MNN- default mnnCorrect function from batchelor package,
e) RUVs- default RUVs function from RUVSeq package,
g) scBatch- batch correction method implemented in scBatch package.
}
